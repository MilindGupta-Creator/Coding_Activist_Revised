{
  "blind75": [
    {
      "id": 1,
      "title": "Two Sum",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Hash Table"],
      "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/two-sum/"
    },
    {
      "id": 2,
      "title": "Valid Parentheses",
      "difficulty": "Easy",
      "companies": ["Amazon", "Microsoft", "Facebook"],
      "tags": ["Stack", "String"],
      "description": "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/valid-parentheses/"
    },
    {
      "id": 3,
      "title": "Best Time to Buy and Sell Stock",
      "difficulty": "Easy",
      "companies": ["Amazon", "Microsoft", "Apple"],
      "tags": ["Array", "Dynamic Programming"],
      "description": "Given an array prices where prices[i] is the price of a given stock on the ith day, find the maximum profit you can achieve.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"
    },
    {
      "id": 4,
      "title": "Maximum Subarray",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Microsoft"],
      "tags": ["Array", "Dynamic Programming"],
      "description": "Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/maximum-subarray/"
    },
    {
      "id": 5,
      "title": "Product of Array Except Self",
      "difficulty": "Medium",
      "companies": ["Amazon", "Facebook", "Microsoft"],
      "tags": ["Array", "Prefix Sum"],
      "description": "Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/product-of-array-except-self/"
    },
    {
      "id": 6,
      "title": "3Sum",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Two Pointers"],
      "description": "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.",
      "timeComplexity": "O(n^2)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/3sum/"
    },
    {
      "id": 7,
      "title": "Merge Intervals",
      "difficulty": "Medium",
      "companies": ["Google", "Facebook", "Microsoft"],
      "tags": ["Array", "Sorting"],
      "description": "Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals.",
      "timeComplexity": "O(n log n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/merge-intervals/"
    },
    {
      "id": 8,
      "title": "Search in Rotated Sorted Array",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Microsoft"],
      "tags": ["Array", "Binary Search"],
      "description": "Given the array nums after the rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.",
      "timeComplexity": "O(log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/search-in-rotated-sorted-array/"
    },
    {
      "id": 9,
      "title": "Combination Sum",
      "difficulty": "Medium",
      "companies": ["Amazon", "Facebook", "Google"],
      "tags": ["Array", "Backtracking"],
      "description": "Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target.",
      "timeComplexity": "O(2^n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/combination-sum/"
    },
    {
      "id": 10,
      "title": "Maximum Product Subarray",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Microsoft"],
      "tags": ["Array", "Dynamic Programming"],
      "description": "Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/maximum-product-subarray/"
    },
    {
      "id": 11,
      "title": "Find Minimum in Rotated Sorted Array",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Microsoft"],
      "tags": ["Array", "Binary Search"],
      "description": "Given the sorted rotated array nums of unique elements, return the minimum element of this array.",
      "timeComplexity": "O(log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/"
    },
    {
      "id": 12,
      "title": "Search a 2D Matrix",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Microsoft"],
      "tags": ["Array", "Binary Search"],
      "description": "Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix.",
      "timeComplexity": "O(log(mn))",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/search-a-2d-matrix/"
    },
    {
      "id": 13,
      "title": "Container With Most Water",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Two Pointers"],
      "description": "Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/container-with-most-water/"
    },
    {
      "id": 14,
      "title": "Longest Substring Without Repeating Characters",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["String", "Sliding Window"],
      "description": "Given a string s, find the length of the longest substring without repeating characters.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(min(m, n))",
      "leetCodeUrl": "https://leetcode.com/problems/longest-substring-without-repeating-characters/"
    },
    {
      "id": 15,
      "title": "Longest Palindromic Substring",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["String", "Dynamic Programming"],
      "description": "Given a string s, return the longest palindromic substring in s.",
      "timeComplexity": "O(n^2)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/longest-palindromic-substring/"
    },
    {
      "id": 16,
      "title": "Longest Common Prefix",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["String"],
      "description": "Write a function to find the longest common prefix string amongst an array of strings.",
      "timeComplexity": "O(S), where S is the sum of all characters in all strings.",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/longest-common-prefix/"
    },
    {
      "id": 17,
      "title": "Word Break",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["String", "Dynamic Programming"],
      "description": "Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.",
      "timeComplexity": "O(n^2)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/word-break/"
    },
    {
      "id": 18,
      "title": "Reverse Linked List",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Linked List"],
      "description": "Given the head of a singly linked list, reverse the list, and return the reversed list.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/reverse-linked-list/"
    },
    {
      "id": 19,
      "title": "Merge Two Sorted Lists",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Linked List"],
      "description": "Merge two sorted linked lists and return it as a sorted list.",
      "timeComplexity": "O(n + m)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/merge-two-sorted-lists/"
    },
    {
      "id": 20,
      "title": "Linked List Cycle",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Linked List", "Two Pointers"],
      "description": "Given head, the head of a linked list, determine if the linked list has a cycle in it.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/linked-list-cycle/"
    },
    {
      "id": 21,
      "title": "Remove Nth Node From End of List",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Linked List", "Two Pointers"],
      "description": "Given the head of a linked list, remove the nth node from the end of the list and return its head.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/"
    },
    {
      "id": 22,
      "title": "Reorder List",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Linked List"],
      "description": "Given a singly linked list L: L0 → L1 → … → Ln-1 → Ln, reorder it to: L0 → Ln → L1 → Ln-1 → L2 → Ln-2 → …",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/reorder-list/"
    },
    {
      "id": 23,
      "title": "Maximum Depth of Binary Tree",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given the root of a binary tree, return its maximum depth.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(h)",
      "leetCodeUrl": "https://leetcode.com/problems/maximum-depth-of-binary-tree/"
    },
    {
      "id": 24,
      "title": "Same Tree",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given the roots of two binary trees p and q, write a function to check if they are the same or not.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(h)",
      "leetCodeUrl": "https://leetcode.com/problems/same-tree/"
    },
    {
      "id": 25,
      "title": "Invert Binary Tree",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given the root of a binary tree, invert the tree, and return its root.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(h)",
      "leetCodeUrl": "https://leetcode.com/problems/invert-binary-tree/"
    },
    {
      "id": 26,
      "title": "Binary Tree Maximum Path Sum",
      "difficulty": "Hard",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given the root of a binary tree, return the maximum path sum of any non-empty path.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(h)",
      "leetCodeUrl": "https://leetcode.com/problems/binary-tree-maximum-path-sum/"
    },
    {
      "id": 27,
      "title": "Binary Tree Level Order Traversal",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Breadth-First Search"],
      "description": "Given the root of a binary tree, return the level order traversal of its nodes' values.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/binary-tree-level-order-traversal/"
    },
    {
      "id": 28,
      "title": "Serialize and Deserialize Binary Tree",
      "difficulty": "Hard",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Design an algorithm to serialize and deserialize a binary tree.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/"
    },
    {
      "id": 29,
      "title": "Subtree of Another Tree",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot.",
      "timeComplexity": "O(m * n)",
      "spaceComplexity": "O(h)",
      "leetCodeUrl": "https://leetcode.com/problems/subtree-of-another-tree/"
    },
    {
      "id": 30,
      "title": "Construct Binary Tree from Preorder and Inorder Traversal",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given two integer arrays preorder and inorder, construct and return the binary tree.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"
    },
    {
      "id": 31,
      "title": "Validate Binary Search Tree",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given the root of a binary tree, determine if it is a valid binary search tree (BST).",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(h)",
      "leetCodeUrl": "https://leetcode.com/problems/validate-binary-search-tree/"
    },
    {
      "id": 32,
      "title": "Kth Smallest Element in a BST",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given the root of a binary search tree, and an integer k, return the kth smallest element in the tree.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(h)",
      "leetCodeUrl": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/"
    },
    {
      "id": 33,
      "title": "Lowest Common Ancestor of a Binary Search Tree",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Depth-First Search"],
      "description": "Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(h)",
      "leetCodeUrl": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/"
    },
    {
      "id": 34,
      "title": "Implement Trie (Prefix Tree)",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Trie"],
      "description": "Implement a trie with insert, search, and startsWith methods.",
      "timeComplexity": "O(m) for insert/search/startsWith, where m is the key length.",
      "spaceComplexity": "O(m * n)",
      "leetCodeUrl": "https://leetcode.com/problems/implement-trie-prefix-tree/"
    },
    {
      "id": 35,
      "title": "Add and Search Word - Data structure design",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Trie"],
      "description": "Design a data structure that supports adding new words and finding if a string matches any previously added string.",
      "timeComplexity": "O(m) for addWord, O(n * 26^m) for search, where m is the word length.",
      "spaceComplexity": "O(m * n)",
      "leetCodeUrl": "https://leetcode.com/problems/add-and-search-word-data-structure-design/"
    },
    {
      "id": 36,
      "title": "Word Search II",
      "difficulty": "Hard",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Tree", "Trie", "Backtracking"],
      "description": "Given an m x n board of characters and a list of strings words, return all words on the board.",
      "timeComplexity": "O(m * n * 4^l), where l is the length of the longest word.",
      "spaceComplexity": "O(k * l), where k is the number of words.",
      "leetCodeUrl": "https://leetcode.com/problems/word-search-ii/"
    },
    {
      "id": 37,
      "title": "Number of Islands",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Depth-First Search"],
      "description": "Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.",
      "timeComplexity": "O(m * n)",
      "spaceComplexity": "O(m * n)",
      "leetCodeUrl": "https://leetcode.com/problems/number-of-islands/"
    },
    {
      "id": 38,
      "title": "Clone Graph",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Depth-First Search"],
      "description": "Given a reference of a node in a connected undirected graph, return a deep copy (clone) of the graph.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/clone-graph/"
    },
    {
      "id": 39,
      "title": "Pacific Atlantic Water Flow",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Depth-First Search"],
      "description": "Given an m x n matrix of non-negative integers representing the height of each unit cell in a continent, determine the list of grid coordinates where water can flow to both the Pacific and Atlantic ocean.",
      "timeComplexity": "O(m * n)",
      "spaceComplexity": "O(m * n)",
      "leetCodeUrl": "https://leetcode.com/problems/pacific-atlantic-water-flow/"
    },
    {
      "id": 40,
      "title": "Course Schedule",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Topological Sort"],
      "description": "There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai. Return true if you can finish all courses. Otherwise, return false.",
      "timeComplexity": "O(V + E)",
      "spaceComplexity": "O(V + E)",
      "leetCodeUrl": "https://leetcode.com/problems/course-schedule/"
    },
    {
      "id": 41,
      "title": "Course Schedule II",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Topological Sort"],
      "description": "There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai. Return the ordering of courses you should take to finish all courses.",
      "timeComplexity": "O(V + E)",
      "spaceComplexity": "O(V + E)",
      "leetCodeUrl": "https://leetcode.com/problems/course-schedule-ii/"
    },
    {
      "id": 42,
      "title": "Longest Increasing Path in a Matrix",
      "difficulty": "Hard",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Depth-First Search"],
      "description": "Given an m x n integers matrix, return the length of the longest increasing path in matrix.",
      "timeComplexity": "O(m * n)",
      "spaceComplexity": "O(m * n)",
      "leetCodeUrl": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/"
    },
    {
      "id": 43,
      "title": "Alien Dictionary",
      "difficulty": "Hard",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Topological Sort"],
      "description": "There is a new alien language that uses the English alphabet. However, the order among the letters is unknown to you. You are given a list of strings words from the alien language's dictionary, where the strings are sorted lexicographically by the rules of this new language. Derive the order of letters in this language.",
      "timeComplexity": "O(C), where C is the total number of characters in words.",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/alien-dictionary/"
    },
    {
      "id": 44,
      "title": "Graph Valid Tree",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Union Find"],
      "description": "Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to check whether these edges make up a valid tree.",
      "timeComplexity": "O(V + E)",
      "spaceComplexity": "O(V + E)",
      "leetCodeUrl": "https://leetcode.com/problems/graph-valid-tree/"
    },
    {
      "id": 45,
      "title": "Number of Connected Components in an Undirected Graph",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Graph", "Union Find"],
      "description": "Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to find the number of connected components in an undirected graph.",
      "timeComplexity": "O(V + E)",
      "spaceComplexity": "O(V + E)",
      "leetCodeUrl": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/"
    },
    {
      "id": 46,
      "title": "Insert Interval",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/insert-interval/"
    },
    {
      "id": 47,
      "title": "Merge Intervals",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals.",
      "timeComplexity": "O(n log n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/merge-intervals/"
    },
    {
      "id": 48,
      "title": "Non-overlapping Intervals",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Greedy"],
      "description": "Given an array of intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.",
      "timeComplexity": "O(n log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/non-overlapping-intervals/"
    },
    {
      "id": 49,
      "title": "Meeting Rooms",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given an array of meeting time intervals where intervals[i] = [starti, endi], determine if a person could attend all meetings.",
      "timeComplexity": "O(n log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/meeting-rooms/"
    },
    {
      "id": 50,
      "title": "Meeting Rooms II",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Heap"],
      "description": "Given an array of meeting time intervals where intervals[i] = [starti, endi], return the minimum number of conference rooms required.",
      "timeComplexity": "O(n log n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/meeting-rooms-ii/"
    },
    {
      "id": 51,
      "title": "Reverse Integer",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Math"],
      "description": "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-2^31, 2^31 - 1], then return 0.",
      "timeComplexity": "O(log(x))",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/reverse-integer/"
    },
    {
      "id": 52,
      "title": "Palindrome Number",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Math"],
      "description": "Given an integer x, return true if x is a palindrome, and false otherwise.",
      "timeComplexity": "O(log(x))",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/palindrome-number/"
    },
    {
      "id": 53,
      "title": "Pow(x, n)",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Math", "Recursion"],
      "description": "Implement pow(x, n), which calculates x raised to the power n (i.e., x^n).",
      "timeComplexity": "O(log n)",
      "spaceComplexity": "O(log n)",
      "leetCodeUrl": "https://leetcode.com/problems/powx-n/"
    },
    {
      "id": 54,
      "title": "Sqrt(x)",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Math", "Binary Search"],
      "description": "Given a non-negative integer x, compute and return the square root of x.",
      "timeComplexity": "O(log x)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/sqrtx/"
    },
    {
      "id": 55,
      "title": "Majority Element",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Divide and Conquer"],
      "description": "Given an array nums of size n, return the majority element.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/majority-element/"
    },
    {
      "id": 56,
      "title": "Majority Element II",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given an integer array of size n, find all elements that appear more than ⌊n/3⌋ times.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/majority-element-ii/"
    },
    {
      "id": 57,
      "title": "Rotate Image",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).",
      "timeComplexity": "O(n^2)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/rotate-image/"
    },
    {
      "id": 58,
      "title": "Spiral Matrix",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given an m x n matrix, return all elements of the matrix in spiral order.",
      "timeComplexity": "O(m * n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/spiral-matrix/"
    },
    {
      "id": 59,
      "title": "Jump Game",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Greedy"],
      "description": "Given an array of non-negative integers nums, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Determine if you are able to reach the last index.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/jump-game/"
    },
    {
      "id": 60,
      "title": "Jump Game II",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Greedy"],
      "description": "Given an array of non-negative integers nums, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Your goal is to reach the last index in the minimum number of jumps.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/jump-game-ii/"
    },
    {
      "id": 61,
      "title": "Merge Sorted Array",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Two Pointers"],
      "description": "You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively. Merge nums1 and nums2 into a single array sorted in non-decreasing order.",
      "timeComplexity": "O(m + n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/merge-sorted-array/"
    },
    {
      "id": 62,
      "title": "Find Peak Element",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Binary Search"],
      "description": "A peak element is an element that is strictly greater than its neighbors. Given an integer array nums, find a peak element, and return its index.",
      "timeComplexity": "O(log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/find-peak-element/"
    },
    {
      "id": 63,
      "title": "Search in Rotated Sorted Array",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Binary Search"],
      "description": "Given the array nums after the rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.",
      "timeComplexity": "O(log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/search-in-rotated-sorted-array/"
    },
    {
      "id": 64,
      "title": "Search a 2D Matrix",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Binary Search"],
      "description": "Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix.",
      "timeComplexity": "O(log(mn))",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/search-a-2d-matrix/"
    },
    {
      "id": 65,
      "title": "Find Minimum in Rotated Sorted Array",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Binary Search"],
      "description": "Given the sorted rotated array nums of unique elements, return the minimum element of this array.",
      "timeComplexity": "O(log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/"
    },
    {
      "id": 66,
      "title": "Find First and Last Position of Element in Sorted Array",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Binary Search"],
      "description": "Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.",
      "timeComplexity": "O(log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/"
    },
    {
      "id": 67,
      "title": "Search Insert Position",
      "difficulty": "Easy",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Binary Search"],
      "description": "Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.",
      "timeComplexity": "O(log n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/search-insert-position/"
    },
    {
      "id": 68,
      "title": "Valid Sudoku",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Hash Table"],
      "description": "Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules: Each row must contain the digits 1-9 without repetition. Each column must contain the digits 1-9 without repetition. Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.",
      "timeComplexity": "O(1)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/valid-sudoku/"
    },
    {
      "id": 69,
      "title": "Set Matrix Zeroes",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place.",
      "timeComplexity": "O(m * n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/set-matrix-zeroes/"
    },
    {
      "id": 70,
      "title": "Spiral Matrix II",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given a positive integer n, generate an n x n matrix filled with elements from 1 to n^2 in spiral order.",
      "timeComplexity": "O(n^2)",
      "spaceComplexity": "O(n^2)",
      "leetCodeUrl": "https://leetcode.com/problems/spiral-matrix-ii/"
    },
    {
      "id": 71,
      "title": "Rotate Array",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given an array, rotate the array to the right by k steps, where k is non-negative.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/rotate-array/"
    },
    {
      "id": 72,
      "title": "Longest Consecutive Sequence",
      "difficulty": "Hard",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Hash Table"],
      "description": "Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/longest-consecutive-sequence/"
    },
    {
      "id": 73,
      "title": "First Missing Positive",
      "difficulty": "Hard",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array"],
      "description": "Given an unsorted integer array nums, find the smallest missing positive integer.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/first-missing-positive/"
    },
    {
      "id": 74,
      "title": "Gas Station",
      "difficulty": "Medium",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Greedy"],
      "description": "There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations. Return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(1)",
      "leetCodeUrl": "https://leetcode.com/problems/gas-station/"
    },
    {
      "id": 75,
      "title": "Candy",
      "difficulty": "Hard",
      "companies": ["Amazon", "Google", "Facebook"],
      "tags": ["Array", "Greedy"],
      "description": "There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings. You are giving candies to these children subjected to the following requirements: Each child must have at least one candy. Children with a higher rating get more candies than their neighbors. Return the minimum number of candies you need to have to distribute the candies to the children.",
      "timeComplexity": "O(n)",
      "spaceComplexity": "O(n)",
      "leetCodeUrl": "https://leetcode.com/problems/candy/"
    }
  ]
}